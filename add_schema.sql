DROP TABLE IF EXISTS RESERVATION;
DROP TABLE IF EXISTS CONSUMABLE_ITEM;
DROP TABLE IF EXISTS NONCONSUMABLE_ITEM;
DROP TABLE IF EXISTS ITEM;
DROP TABLE IF EXISTS CATEGORY;
DROP TABLE IF EXISTS PERSON;

CREATE TABLE PERSON --to prevent needless bloating, only record the person's info after he/she has made a booking request
(	id		INT		IDENTITY(0,1)	PRIMARY KEY,
	graphId		VARCHAR(32),
	displayName	VARCHAR(255),
	email	    	VARCHAR(255)	NOT NULL,
	faculty	  	VARCHAR(50),
	phone		VARCHAR(15)
);

CREATE TABLE CATEGORY
(	id		INT		IDENTITY(0,1)	PRIMARY KEY,
	categoryName	VARCHAR(50)	NOT NULL UNIQUE,
	parentId	INT,
	updateTime	DATETIME	NOT NULL,
FOREIGN KEY (parentId) REFERENCES CATEGORY(id)
	ON DELETE NO ACTION	ON UPDATE NO ACTION);

CREATE TABLE ITEM
(	id		INT		IDENTITY(0,1)	PRIMARY KEY,
	itemName  	VARCHAR(50)	NOT NULL,
 	internalTagOrStatusRemarks	VARCHAR(255),
 	externalRemarks	VARCHAR(255),
	categoryId	INT		NOT NULL,
	updateTime	DATETIME	NOT NULL,
 	isConsumable	BIT		NOT NULL,
FOREIGN KEY (categoryId) REFERENCES CATEGORY(id)
 	ON DELETE NO ACTION	ON UPDATE CASCADE);

CREATE TABLE CONSUMABLE_ITEM
(	itemId		INT		NOT NULL,
	valuePerAmt	INT		NOT NULL,
	valueUnit	VARCHAR(10)	NOT NULL,
	amountIn	INT		NOT NULL,
	amountOut	INT		NOT NULL,
	--amountBal derived
	amountUnit	VARCHAR(10)	NOT NULL,
	nextInAmt	INT,
	nextInDate	DATETIME,
	datePurchased	DATETIME,
	expiryDate	DATETIME,
FOREIGN KEY (itemId) REFERENCES ITEM(id)
	ON DELETE CASCADE	ON UPDATE CASCADE);

CREATE TABLE NONCONSUMABLE_ITEM
(	itemId		INT		NOT NULL,
	--isAvalable derived
	isBlocked	BIT		DEFAULT 0,
	isOutOfOrder	BIT		DEFAULT 0,
	isFaulty	BIT		DEFAULT 1,
	location	VARCHAR(50),
	brand		VARCHAR(30)	NOT NULL,
	model		VARCHAR(30)	NOT NULL,
	equipmentNumber	VARCHAR(40)	NOT NULL,
	serialNumber	VARCHAR(40)	NOT NULL,
	assigneeEmail	VARCHAR(255),
FOREIGN KEY (itemId) REFERENCES ITEM(id)
	ON DELETE CASCADE	ON UPDATE CASCADE);

CREATE TABLE RESERVATION
(	id		INT		IDENTITY(0,1)	PRIMARY KEY,
	itemId		INT		NOT NULL,
 	loanLocation	VARCHAR(50),
	startTime	DATETIME	NOT NULL,
 	isReleased	BIT		DEFAULT 0,
	endTime		DATETIME	NOT NULL,
 	isReturned	BIT		DEFAULT 0,
 	personId	INT		NOT NULL,
 	supervisorEmail	VARCHAR(255)	NOT NULL,
 	responderIdA	INT,
 	responderIdB	INT,
 	isPending	BIT		DEFAULT 1,
 	isApprovedSpvsr	BIT		DEFAULT 0,
 	isApprovedA	BIT		DEFAULT 0,
 	isApprovedB	BIT		DEFAULT 0,
	updateTime	DATETIME,
	creationTime	DATETIME	NOT NULL,
FOREIGN KEY (itemId) REFERENCES ITEM(id)
	ON UPDATE CASCADE,
FOREIGN KEY (responderIdA) REFERENCES PERSON(id)
	ON DELETE NO ACTION	ON UPDATE NO ACTION,
FOREIGN KEY (responderIdB) REFERENCES PERSON(id)
	ON DELETE NO ACTION	ON UPDATE NO ACTION);
